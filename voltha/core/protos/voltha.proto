// See README.txt for information and build instructions.

syntax = "proto3";

package voltha;

import "google/api/annotations.proto";

option java_package = "org.opencord.voltha";
option java_outer_classname = "VolthaProtos";
option csharp_namespace = "Opencord.Voltha.Voltha";

// Empty message
message NullMessage {}

// Encode health status of a Voltha instance
message HealthStatus {

  // Health states
  enum HealthState {
    HEALTHY = 0;  // The instance is healthy
    OVERLOADED = 1;  // The instance is overloaded, decrease query rate
    DYING = 2;  // The instance is in a critical condition, do not use it
  }

  // Current state of health of this Voltha instance
  HealthState state = 1;

}

// A more complex message type for testing purposes
message MoreComplex {
  HealthStatus health = 1; // Embedded health
  int32 foo_counter = 2; // Counting foos
  string name = 3;  // Name of this thing
  repeated MoreComplex children = 4;  // Nested object to test recursion type
}

service HealthService {

  // Return current health status of a Voltha instance
  rpc GetHealthStatus(NullMessage) returns (HealthStatus) {
    option (google.api.http) = {
      get: "/health"
      body: '*'
    };
  }

}

