syntax = "proto3";

package voltha;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "common.proto";
import "openflow_13.proto";

message LogicalDevice {
    string id = 1;
    uint64 datapath_id = 2;
    openflow_13.ofp_desc desc = 3;
}

message LogicalDevices {
    repeated LogicalDevice items = 1;
}

message LogicalPorts {
    repeated openflow_13.ofp_port items = 1;
}

message LogicalDeviceDetails {
    string id = 1;
    uint64 datapath_id = 2;
    openflow_13.ofp_desc desc = 3;
    openflow_13.ofp_switch_features switch_features = 4;
}

message FlowTableUpdate {
    string id = 1; // device id
    openflow_13.ofp_flow_mod flow_mod = 2;
}

message GroupTableUpdate {
    string id = 1; // device id
    openflow_13.ofp_group_mod group_mod = 2;
}

message Flows {
    repeated openflow_13.ofp_flow_stats items = 1;
}

message FlowGroups {
    repeated openflow_13.ofp_group_entry items = 1;
}

message PacketIn {
    string id = 1; // device id
    openflow_13.ofp_packet_in packet_in = 2;
}

message PacketOut {
    string id = 1; // device id
    openflow_13.ofp_packet_out packet_out = 2;
}

service VolthaLogicalLayer {

    // List logical devices owned by this Voltha instance
    rpc ListLogicalDevices(google.protobuf.Empty) returns(LogicalDevices) {
        option (google.api.http) = {
            get: "/local/devices"
        };
    }

    // Get detailed info on logical device owned by this Voltha instance
    rpc GetLogicalDevice(ID) returns(LogicalDeviceDetails) {
        option (google.api.http) = {
            get: "/local/devices/{id}"
        };
    }

    // List ports of a logical device
    rpc ListLogicalDevicePorts(ID) returns(LogicalPorts) {
        option (google.api.http) = {
            get: "/local/devices/{id}/ports"
        };
    }

    // Update flow table for device
    rpc UpdateFlowTable(FlowTableUpdate) returns(google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/local/devices/{id}/flows"
            body: "*"
        };
    }

    // List all flows of a logical device
    rpc ListDeviceFlows(ID) returns(Flows) {
        option (google.api.http) = {
            get: "/local/devices/{id}/flows"
        };
    }

    // Update group tabel for device
    rpc UpdateGroupTable(GroupTableUpdate) returns(google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/local/devices/{id}/groups"
            body: "*"
        };
    }

    // List all flow groups of a logical device
    rpc ListDeviceFlowGroups(ID) returns(FlowGroups) {
        option (google.api.http) = {
            get: "/local/devices/{id}/groups"
        };
    }

    // Stream control packets to the dataplane
    rpc StreamPacketsOut(stream PacketOut) returns(google.protobuf.Empty) {
        // This does not have an HTTP representation
    }

    // Receive control packet stream
    rpc ReceivePacketsIn(google.protobuf.Empty) returns(stream PacketIn) {
        // This does not have an HTTP representation
    }

}
